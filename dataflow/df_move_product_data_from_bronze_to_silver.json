{
	"name": "df_move_product_data_from_bronze_to_silver",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adls_productionadls",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adls_productionadls",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductKey as string,",
				"          ProductLabel as string,",
				"          ProductName as string,",
				"          ProductSubcategoryKey as string,",
				"          Manufacturer as string,",
				"          BrandName as string,",
				"          ClassID as string,",
				"          ClassName as string,",
				"          StyleID as string,",
				"          StyleName as string,",
				"          ColorID as string,",
				"          ColorName as string,",
				"          Size as string,",
				"          SizeRange as string,",
				"          SizeUnitMeasureID as string,",
				"          Weight as string,",
				"          WeightUnitMeasureID as string,",
				"          UnitOfMeasureID as string,",
				"          UnitOfMeasureName as string,",
				"          StockTypeID as string,",
				"          StockTypeName as string,",
				"          UnitCost as string,",
				"          UnitPrice as string,",
				"          AvailableForSaleDate as string,",
				"          StopSaleDate as string,",
				"          Status as string,",
				"          ImageURL as string,",
				"          ProductURL as string,",
				"          ETLLoadID as string,",
				"          LoadDate as string,",
				"          UpdateDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'bronze',",
				"     fileName: 'Product.parquet') ~> source1",
				"source1 select(mapColumn(",
				"          ProductKey,",
				"          ProductName,",
				"          ProductSubcategoryKey,",
				"          Brand = BrandName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'silver',",
				"     folderPath: 'product',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}